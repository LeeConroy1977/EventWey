import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Navigate, Route, Routes } from "react-router-dom";
import Messages from "./routes/messages/Messages";
import Notifications from "./routes/notifications/Notifications";
import UserEvents from "./routes/user-events/UserEvents";
import ConnectionRequests from "./routes/connection-requests/ConnectionRequests";
import Event from "./routes/event/Event";
import GroupLayout from "./layouts/group-layout/GroupLayout";
import ConnectionLayout from "./layouts/connection-layout/ConnectionLayout";
import ConnectionEvents from "./routes/connection-events/ConnectionEvents";
import ConnectionGroups from "./routes/connection-groups/ConnectionGroups";
import ConnectionConnections from "./routes/connection-connections/ConnectionConnections";
import ProfileLayout from "./layouts/profile-layout/ProfileLayout";
import ProfileEvents from "./routes/user-profile-events/ProfileEvents";
import ProfileGroups from "./routes/user-profile-groups/ProfileGroups";
import ProfileConnections from "./routes/user-profile-connections/ProfileConnections";
import ProfileSettings from "./routes/user-profile-settings/ProfileSettings";
import CreateGroup from "./routes/create-group/CreateGroup";
import CreateUser from "./routes/sign-up/CreateUser";
import SignIn from "./routes/sign-in/SignIn";
import PrivateRoute from "./PrivateRoute";
import CreateEvent from "./routes/create-event/CreateEvent";
import AppLayout from "./layouts/app-layout/AppLayout";
import LandingPage from "./routes/landing-page/LandingPage";
import VistorLayout from "./layouts/vistor-layout/VistorLayout";
import UserLayout from "./layouts/user-layout/UserLayout";
import UserGroups from "./routes/user-groups/UserGroups";
import UserConnection from "./routes/user-connections/UserConnection";
import GroupDetails from "./routes/group-details/GroupDetails";
import GroupEvents from "./routes/group-events/GroupEvents";
import GroupMembers from "./routes/group-members/GroupMembers";
import Events from "./routes/events/Events";
import Groups from "./routes/groups/Groups";
import { useUser } from "./contexts/UserContext";
import AdminGroups from "./routes/user-admin-groups/AdminGroups";
import AdminEvents from "./routes/user-admin-events/AdminEvents";
function App() {
    const { user } = useUser();
    return (_jsxs("div", { className: "w-screen min-h-screen font-poppins", children: ["=", _jsx(Routes, { children: _jsxs(Route, { path: "/", element: _jsx(AppLayout, {}), children: [_jsx(Route, { index: true, element: _jsx(LandingPage, {}) }), _jsxs(Route, { path: "/", element: _jsx(VistorLayout, {}), children: [_jsx(Route, { path: "events", element: _jsx(Events, {}) }), _jsx(Route, { path: "groups", element: _jsx(Groups, {}) })] }), _jsx(Route, { path: "/user", element: _jsx(PrivateRoute, {}), children: _jsxs(Route, { element: _jsx(UserLayout, {}), children: [_jsx(Route, { index: true, element: _jsx(Navigate, { to: "events", replace: true }) }), " ", _jsx(Route, { path: "events", element: _jsx(Events, {}) }), _jsx(Route, { path: "groups", element: _jsx(Groups, {}) }), _jsx(Route, { path: "my-events", element: _jsx(UserEvents, {}) }), _jsx(Route, { path: "my-groups", element: _jsx(UserGroups, {}) }), _jsx(Route, { path: "my-connections", element: _jsx(UserConnection, {}) }), _jsx(Route, { path: "my-connections/requests", element: _jsx(ConnectionRequests, {}) }), _jsxs(Route, { path: "admin", children: [_jsx(Route, { index: true, element: _jsx(Navigate, { to: "groups", replace: true }) }), " ", _jsx(Route, { path: "groups", element: _jsx(AdminGroups, {}) }), _jsx(Route, { path: "events", element: _jsx(AdminEvents, {}) })] })] }) }), _jsx(Route, { path: "/user/profile", element: _jsx(PrivateRoute, {}), children: _jsxs(Route, { element: _jsx(ProfileLayout, {}), children: [_jsx(Route, { index: true, element: _jsx(Navigate, { to: "events", replace: true }) }), _jsx(Route, { path: "events", element: _jsx(ProfileEvents, {}) }), _jsx(Route, { path: "groups", element: _jsx(ProfileGroups, {}) }), _jsx(Route, { path: "connections", element: _jsx(ProfileConnections, {}) }), _jsx(Route, { path: "settings", element: _jsx(ProfileSettings, {}) })] }) }), _jsx(Route, { path: "messages", element: _jsx(Messages, {}) }), _jsx(Route, { path: "notifications", element: _jsx(Notifications, {}) }), _jsx(Route, { path: "/user/groups/:id", element: _jsx(PrivateRoute, {}), children: _jsxs(Route, { element: _jsx(GroupLayout, {}), children: [_jsx(Route, { index: true, element: _jsx(Navigate, { to: "details", replace: true }) }), _jsx(Route, { path: "details", element: _jsx(GroupDetails, {}) }), _jsx(Route, { path: "events", element: _jsx(GroupEvents, {}) }), _jsx(Route, { path: "members", element: _jsx(GroupMembers, {}) })] }) }), _jsx(Route, { path: "user/events/:id", element: _jsx(Event, {}) }), _jsx(Route, { path: "/connection/:id", element: _jsx(PrivateRoute, {}), children: _jsxs(Route, { element: _jsx(ConnectionLayout, {}), children: [_jsx(Route, { index: true, element: _jsx(Navigate, { to: "events", replace: true }) }), _jsx(Route, { path: "events", element: _jsx(ConnectionEvents, {}) }), _jsx(Route, { path: "groups", element: _jsx(ConnectionGroups, {}) }), _jsx(Route, { path: "connections", element: _jsx(ConnectionConnections, {}) })] }) }), _jsx(Route, { path: "/create-group", element: _jsx(PrivateRoute, {}), children: _jsx(Route, { index: true, element: _jsx(CreateGroup, {}) }) }), _jsx(Route, { path: "/create-event", element: _jsx(PrivateRoute, {}), children: _jsx(Route, { index: true, element: _jsx(CreateEvent, {}) }) }), _jsx(Route, { path: "/auth/sign-up", element: _jsx(CreateUser, {}) }), _jsx(Route, { path: "/auth/sign-in", element: _jsx(SignIn, {}) })] }) })] }));
}
export default App;
